<%=
CONF_DIR = "/var/vcap/jobs/rep_windows/config"
TMP_DIR = "/var/vcap/data/executor/tmp"
TRUSTED_CERTS_DIR = "/var/vcap/data/executor/trusted_certs"

config = {
 "dropsonde_port" => p("diego.rep.dropsonde_port"),
 "consul_cluster" => "http://127.0.0.1:8500",
 "debug_address" => p("diego.rep.debug_addr"),
 "listen_addr" => p("diego.rep.enable_legacy_api_endpoints") ? p("diego.rep.listen_addr") : p("diego.rep.listen_addr_admin"),
 "listen_addr_securable" => p("diego.rep.listen_addr_securable"),
 "require_tls" => p("diego.rep.require_tls"),
 "advertise_domain" => p("diego.rep.advertise_domain"),
 "enable_legacy_api_endpoints" => p("diego.rep.enable_legacy_api_endpoints"),
 "preloaded_root_fs" => p("diego.rep.preloaded_rootfses"),
 "supported_providers" => p("diego.rep.rootfs_providers"),
 "placement_tags" => p("diego.rep.placement_tags"),
 "optional_placement_tags" => p("diego.rep.optional_placement_tags"),
 "cell_id" => "#{spec.job.name}-#{spec.index}-#{spec.id}",
 "zone" => spec.az || p("diego.rep.zone"),
 "polling_interval" => "#{p("diego.rep.polling_interval_in_seconds")}s",
 "evacuation_polling_interval" => "#{p("diego.rep.evacuation_polling_interval_in_seconds")}s",
 "evacuation_timeout" => "#{p("diego.rep.evacuation_timeout_in_seconds")}s",
 "skip_cert_verify" => p("diego.ssl.skip_cert_verify"),
 "garden_network" => p("diego.executor.garden.network"),
 "garden_addr" => p("diego.executor.garden.address"),
 "memory_mb" => p("diego.executor.memory_capacity_mb"),
 "disk_mb" => p("diego.executor.disk_capacity_mb"),
 "container_inode_limit" => p("diego.executor.container_inode_limit"),
 "container_max_cpu_shares" => p("diego.executor.container_max_cpu_shares"),
 "cache_path" => p("diego.executor.cache_path"),
 "max_cache_size_in_bytes" => p("diego.executor.max_cache_size_in_bytes"),
 "export_network_env_vars" => p("diego.executor.export_network_env_vars"),
 "healthy_monitoring_interval" => "#{p("diego.executor.healthy_monitoring_interval_in_seconds")}s",
 "unhealthy_monitoring_interval" => "#{p("diego.executor.unhealthy_monitoring_interval_in_seconds")}s",
 "create_work_pool_size" => p("diego.executor.create_work_pool_size"),
 "delete_work_pool_size" => p("diego.executor.delete_work_pool_size"),
 "read_work_pool_size" => p("diego.executor.read_work_pool_size"),
 "metrics_work_pool_size" => p("diego.executor.metrics_work_pool_size"),
 "healthcheck_work_pool_size" => p("diego.executor.healthcheck_work_pool_size"),
 "max_concurrent_downloads" => p("diego.executor.max_concurrent_downloads"),
 "temp_dir" => "#{TMP_DIR}",
 "log_level" => p("diego.rep.log_level"),
 "garden_healthcheck_process_path" => "C:\\windows\\system32\\cmd.exe",
 "garden_healthcheck_process_user" => p("diego.executor.garden_healthcheck.process.user"),
 "garden_healthcheck_process_args" => ["/c", "dir"],
}

if p("diego.rep.bbs.require_ssl")
	config[:bbs_ca_cert_file] = "#{CONF_DIR}/certs/bbs/ca.crt"
	config[:bbs_client_cert_file] = "#{CONF_DIR}/certs/bbs/client.crt"
	config[:bbs_client_key_file] = "#{CONF_DIR}/certs/bbs/client.key"
	config[:bbs_api_url] = "https://#{p("diego.rep.bbs.api_location")}"
else
	config[:bbs_api_url] = "http://#{p("diego.rep.bbs.api_location")}"
end

if p("diego.rep.require_tls")
	config[:ca_cert_file] =  "#{CONF_DIR}/certs/ca.crt"
	config[:server_cert_file] =  "#{CONF_DIR}/certs/server.crt"
	config[:server_key_file] =  "#{CONF_DIR}/certs/server.key"
end

JSON.dump(config)
%>
